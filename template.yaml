AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Stage:
    Type: "String"
    AllowedValues:
      - dev
      - prod
  Subnet:
    Type: "String"
    NoEcho: true
  VPC:
    Type: "String"
    NoEcho: true

Resources:
  SecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: String
        GroupName: !Sub "${Stage}_staking_sg"
        SecurityGroupEgress: 
          - CidrIp: 0.0.0.0/0
            IpProtocol: -1
            # DestinationPrefixListId: String
            # DestinationSecurityGroupId: String
            # FromPort: Integer
            # ToPort: Integer
        SecurityGroupIngress: 
          - CidrIp: 0.0.0.0/0
            IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            # SourcePrefixListId: String
            # SourceSecurityGroupId: String
            # SourceSecurityGroupName: String
            # SourceSecurityGroupOwnerId: String
          - CidrIp: 0.0.0.0/0
            IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            # SourcePrefixListId: String
            # SourceSecurityGroupId: String
            # SourceSecurityGroupName: String
            # SourceSecurityGroupOwnerId: String
        VpcId: !Ref VPC
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${Stage}2-staking-cluster"
      # No capacity providers necessary for EC2
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      # CONFIGURE LOGGING HERE
  ECSService:
      Type: AWS::ECS::Service
      DependsOn: 
        - ECSCluster
        - SecurityGroup
      Properties:
        Cluster: !Sub "${Stage}2-staking-cluster"
        DeploymentConfiguration: 
          DeploymentCircuitBreaker:
            Enable: false
            Rollback: true
          MaximumPercent: 200
          MinimumHealthyPercent: 100
        DeploymentController: 
          Type: ECS
        DesiredCount: 1
        EnableECSManagedTags: true
        EnableExecuteCommand: true
        LaunchType: EC2
        NetworkConfiguration: 
          AwsvpcConfiguration:
            AssignPublicIp: DISABLED
            SecurityGroups: 
              - !GetAtt SecurityGroup.GroupId
            Subnets: 
              - !Ref Subnet
        PlacementStrategies: 
          - Type: spread
            Field: attribute:ecs.availability-zone
          - Type: spread
            Field: instanceId
        SchedulingStrategy: REPLICA
        ServiceName: !Sub "${Stage}2_staking_service"
        TaskDefinition: !Sub "${Stage}_eth_staker"
      

          # ec2 instance - create
          # asg - create
          # need io2 500 gb ssd ebs vol attached to ec2 instance
          # turn on ebs optimization
